{"version":3,"file":"app.min.js","sources":["../node_modules/stage0/index.js","../node_modules/stage0/syntheticEvents.js","../node_modules/stage0/reconcile.js","../app.js"],"sourcesContent":["\nfunction collector(node) {\n  if (node.nodeType !== 3) {\n    if (node.attributes !== undefined) {\n      for(let attr of node.attributes) {\n        let aname = attr.name\n        if (aname[0] === '#') {\n          node.removeAttribute(aname)\n          return aname.slice(1)\n        }\n      }\n    }\n    return 0\n  } else {\n    let nodeData = node.nodeValue\n    if (nodeData[0] === '#') {\n      node.nodeValue = \"\"\n      return nodeData.slice(1)\n    }\n    return 0\n  }\n}\n\nfunction walker(node) {\n  let skip = false, tmp, pathId = '', prevPathId, pahtIdLen, code1, code2, ref\n  code1 = code2 = ''\n  if (ref = collector(node)) code2 += `refs.${ref} = node;\\n` \n  do {\n      if (!skip && (tmp = node.firstChild)) {\n          if (tmp.nodeType === 8) {\n              tmp.parentNode.removeChild(tmp)\n              continue\n          }\n          skip = false       \n\n          prevPathId = pathId\n          pathId += '_f'\n          code1 += `let ${pathId} = ${prevPathId || 'node'}.firstChild;\\n` \n\n          if (ref = collector(tmp)) code2 += `refs.${ref} = ${pathId};\\n` \n      } else if (tmp = node.nextSibling) {\n          if (tmp.nodeType === 8) {\n              tmp.parentNode.removeChild(tmp)\n              continue\n          }\n          skip = false\n\n          prevPathId = pathId\n          pathId += '_n'\n          code1 += `let ${pathId} = ${prevPathId || 'node'}.nextSibling;\\n` \n\n          if (ref = collector(tmp)) code2 += `refs.${ref} = ${pathId};\\n` \n      } else {\n          pahtIdLen = pathId.length\n          if (pathId[pahtIdLen - 1] === 'n') {\n              pathId = pathId.slice(0, pathId.lastIndexOf('_f_n'))\n          } else {\n             pathId = pathId.slice(0, pahtIdLen- 2) \n          }\n          tmp = node.parentNode\n          skip = true\n      }\n      node = tmp\n  } while (node)\n  return Function('node', code1 + 'let refs = {};\\n' + code2 + 'return refs;\\n')\n}\n\nconst ACTIONS = {\n  FIRST_CHILD: 1,\n  NEXT_SIBLING: 2,\n  PARENT_NODE: 3,\n  TAKE: 10\n}\nfunction walker2(node) {\n  let skip = false, tmp, pathId = '', prevPathId, pahtIdLen, ref,\n    paths = [], reflist = [], root = node\n  if (ref = collector(node)) paths.push(ACTIONS.TAKE)\n  do {\n      if (!skip && (tmp = node.firstChild)) {\n          if (tmp.nodeType === 8) {\n              tmp.parentNode.removeChild(tmp)\n              continue\n          }\n          skip = false       \n\n          prevPathId = pathId\n          pathId += '_f'\n          paths.push(ACTIONS.FIRST_CHILD)\n\n          if (ref = collector(tmp)) {\n            paths.push(ACTIONS.TAKE)\n            reflist.push(ref)\n          }\n      } else if (tmp = node.nextSibling) {\n          if (tmp.nodeType === 8) {\n              tmp.parentNode.removeChild(tmp)\n              continue\n          }\n          skip = false\n\n          prevPathId = pathId\n          pathId += '_n'\n          paths.push(ACTIONS.NEXT_SIBLING)\n\n          if (ref = collector(tmp)) {\n            paths.push(ACTIONS.TAKE)\n            reflist.push(ref)\n          }\n      } else {\n          pahtIdLen = pathId.length\n          if (pathId[pahtIdLen - 1] === 'n') {\n              pathId = pathId.slice(0, pathId.lastIndexOf('_f_n'))\n          } else {\n             pathId = pathId.slice(0, pahtIdLen- 2) \n             \n          }\n          paths.push(ACTIONS.PARENT_NODE)\n          tmp = node.parentNode\n          skip = true\n      }\n      node = tmp\n  } while (node && node !== root)\n  return {paths, reflist}\n}\n\nfunction runtime(node) {\n  const refs = {}\n  const {paths, reflist} = this._refPaths\n\n  let tmp = node, refIdx = 0, path\n  for(let i = 0; i < paths.length; i++) {\n    path = paths[i]\n    if (path === ACTIONS.TAKE) {\n      refs[reflist[refIdx++]] = tmp\n    } else if (path === ACTIONS.FIRST_CHILD) {\n      tmp = tmp.firstChild\n    } else if (path === ACTIONS.NEXT_SIBLING) {\n      tmp = tmp.nextSibling\n    } else if (path === ACTIONS.PARENT_NODE) {\n      tmp = tmp.parentNode\n    }\n  }\n\n  return refs\n}\n\nconst compilerTemplate = document.createElement('template')\nexport function h(strings, ...args) {\n  let result = ''\n  for(let i = 0; i < args.length; i++) result += strings[i] + args[i]\n  result += strings[strings.length - 1]\n\n  const template = result\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/\\n\\s+/g, '<!-- -->')\n  compilerTemplate.innerHTML = template\n  const content = compilerTemplate.content.firstChild\n  content._refPaths = walker2(content)\n  content.collect = runtime\n  return content\n}\nexport default h\n","const nativeToSyntheticEvent = (event, name) => {\n    const eventKey = `__${name}`\n    let dom = event.target\n    while(dom !== null) {\n        const eventHandler = dom[eventKey]\n        if (eventHandler) {\n            eventHandler()\n            return\n        }\n        dom = dom.parentNode\n    }\n}\nconst CONFIGURED_SYNTHETIC_EVENTS = {}\nexport function setupSyntheticEvent(name) {\n    if (CONFIGURED_SYNTHETIC_EVENTS[name]) return\n    document.addEventListener(name, event => nativeToSyntheticEvent(event, name))\n    CONFIGURED_SYNTHETIC_EVENTS[name] = true\n}","\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses dom props firstChild/lastChild/nextSibling\n// for markers moving.\nexport function reconcile(parent, renderedValues, data, createFn, noOp, beforeNode, afterNode) {\n    // Fast path for clear\n    if (data.length === 0) {\n        if (beforeNode !== undefined || afterNode !== undefined) {\n            let node = beforeNode !== undefined ? beforeNode.nextSibling : parent.firstChild,\n                tmp\n\n            if (afterNode === undefined) afterNode = null\n\n            while(node !== afterNode) {\n                tmp = node.nextSibling\n                parent.removeChild(node)\n                node = tmp\n            }\n        } else {\n            parent.textContent = \"\"    \n        }\n        return\n    }\n\n    // Fast path for create\n    if (renderedValues.length === 0) {\n        let node, mode = afterNode !== undefined ? 1 : 0\n        for(let i = 0, len = data.length; i < len; i++) {\n            node = createFn(data[i])\n            mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node)\n        }\n        return\n    }\n\n    let prevStart = 0,\n        newStart = 0,\n        loop = true,\n        prevEnd = renderedValues.length-1, newEnd = data.length-1,\n        a, b,\n        prevStartNode = beforeNode ? beforeNode.nextSibling : parent.firstChild,\n        newStartNode = prevStartNode,\n        prevEndNode = afterNode ? afterNode.previousSibling : parent.lastChild,\n        newEndNode = prevEndNode\n    \n    fixes: while(loop) {\n        loop = false\n        let _node\n\n        // Skip prefix\n        a = renderedValues[prevStart], b = data[newStart]\n        while(a === b) {\n            noOp(prevStartNode, b)\n            prevStart++\n            newStart++\n            newStartNode = prevStartNode = prevStartNode.nextSibling\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevStart]\n            b = data[newStart]\n        }\n\n        // Skip suffix\n        a = renderedValues[prevEnd], b = data[newEnd]\n        while(a === b) {\n            noOp(prevEndNode, b)\n            prevEnd--\n            newEnd--\n            afterNode = prevEndNode\n            newEndNode = prevEndNode = prevEndNode.previousSibling\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevEnd]\n            b = data[newEnd]\n        }\n\n        // Fast path to swap backward\n        a = renderedValues[prevEnd], b = data[newStart]\n        while(a === b) {\n            loop = true\n            noOp(prevEndNode, b)\n            _node = prevEndNode.previousSibling\n            parent.insertBefore(prevEndNode, newStartNode)\n            newEndNode = prevEndNode = _node\n            newStart++\n            prevEnd--\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevEnd]\n            b = data[newStart]\n        }\n\n        // Fast path to swap forward\n        a = renderedValues[prevStart], b = data[newEnd]\n        while(a === b) {\n            loop = true\n            noOp(prevStartNode, b)\n            _node = prevStartNode.nextSibling\n            parent.insertBefore(prevStartNode, afterNode)\n            prevStart++\n            afterNode = newEndNode = prevStartNode\n            prevStartNode = _node\n            newEnd--\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevStart]\n            b = data[newEnd]\n        }\n    }\n\n    // Fast path for shrink\n    if (newEnd < newStart) {\n        if (prevStart <= prevEnd) {\n            let next\n            while(prevStart <= prevEnd) {\n                if (prevEnd === 0) {\n                    parent.removeChild(prevEndNode)\n                } else {\n                    next = prevEndNode.previousSibling    \n                    parent.removeChild(prevEndNode)\n                    prevEndNode = next\n                }\n                prevEnd--\n            }\n        }\n        return\n    }\n\n    // Fast path for add\n    if (prevEnd < prevStart) {\n        if (newStart <= newEnd) {\n            let node, mode = afterNode ? 1 : 0\n            while(newStart <= newEnd) {\n                node = createFn(data[newStart])\n                mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node)\n                newStart++\n            }\n        }\n        return\n    }\n\n    // Positions for reusing nodes from current DOM state\n    const P = new Array(newEnd + 1 - newStart)\n    for(let i = newStart; i <= newEnd; i++) P[i] = -1\n\n    // Index to resolve position from current to new\n    const I = new Map()\n    for(let i = newStart; i <= newEnd; i++) I.set(data[i], i)\n\n    let reusingNodes = 0, toRemove = []\n    for(let i = prevStart; i <= prevEnd; i++) {\n        if (I.has(renderedValues[i])) {\n            P[I.get(renderedValues[i])] = i\n            reusingNodes++\n        } else {\n            toRemove.push(i)\n        }\n    }\n\n    // Fast path for full replace\n    if (reusingNodes === 0) {\n        if (beforeNode !== undefined || afterNode !== undefined) {\n            let node = beforeNode !== undefined ? beforeNode.nextSibling : parent.firstChild,\n                tmp\n\n            if (afterNode === undefined) afterNode = null\n\n            while(node !== afterNode) {\n                tmp = node.nextSibling\n                parent.removeChild(node)\n                node = tmp\n                prevStart++\n            }\n        } else {\n            parent.textContent = \"\"\n        }\n\n        let node, mode = afterNode ? 1 : 0\n        for(let i = newStart; i <= newEnd; i++) {\n            node = createFn(data[i])\n            mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node)\n        }\n\n        return\n    }\n\n    // What else?\n    const longestSeq = longestPositiveIncreasingSubsequence(P, newStart)\n\n    // Collect nodes to work with them\n    const nodes = []\n    let tmpC = prevStartNode\n    for(let i = prevStart; i <= prevEnd; i++) {\n        nodes[i] = tmpC\n        tmpC = tmpC.nextSibling\n    }\n\n    for(let i = 0; i < toRemove.length; i++) parent.removeChild(nodes[toRemove[i]])\n\n    let lisIdx = longestSeq.length - 1, tmpD\n    for(let i = newEnd; i >= newStart; i--) {\n        if(longestSeq[lisIdx] === i) {\n            afterNode = nodes[P[longestSeq[lisIdx]]]\n            noOp(afterNode, data[i])\n            lisIdx--\n        } else {\n            if (P[i] === -1) {\n                tmpD = createFn(data[i])\n            } else {\n                tmpD = nodes[P[i]]\n                noOp(tmpD, data[i])\n            }\n            parent.insertBefore(tmpD, afterNode)\n            afterNode = tmpD\n        }\n    }\n}\n\nexport default reconcile\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n    var seq = [],\n        is  = [],\n        l   = -1,\n        pre = new Array(ns.length);\n\n    for (var i = newStart, len = ns.length; i < len; i++) {\n        var n = ns[i];\n        if (n < 0) continue;\n        var j = findGreatestIndexLEQ(seq, n);\n        if (j !== -1) pre[i] = is[j];\n        if (j === l) {\n            l++;\n            seq[l] = n;\n            is[l]  = i;\n        } else if (n < seq[j + 1]) {\n            seq[j + 1] = n;\n            is[j + 1] = i;\n        }\n    }\n\n    for (i = is[l]; l >= 0; i = pre[i], l--) {\n        seq[l] = i;\n    }\n\n    return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n    // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n    // therefore, they actually start out of range: (-1, last + 1)\n    var lo = -1,\n        hi = seq.length;\n    \n    // fast path for simple increasing sequences\n    if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n    while (hi - lo > 1) {\n        var mid = Math.floor((lo + hi) / 2);\n        if (seq[mid] > n) {\n            hi = mid;\n        } else {\n            lo = mid;\n        }\n    }\n\n    return lo;\n}\n","import h from 'stage0'\nimport {setupSyntheticEvent} from 'stage0/syntheticEvents'\nimport {reconcile} from 'stage0/reconcile'\n\nlet did = 1\nfunction buildData(count) {\n    var adjectives = [\"pretty\", \"large\", \"big\", \"small\", \"tall\", \"short\", \"long\", \"handsome\", \"plain\", \"quaint\", \"clean\", \"elegant\", \"easy\", \"angry\", \"crazy\", \"helpful\", \"mushy\", \"odd\", \"unsightly\", \"adorable\", \"important\", \"inexpensive\", \"cheap\", \"expensive\", \"fancy\"];\n    var colours = [\"red\", \"yellow\", \"blue\", \"green\", \"pink\", \"brown\", \"purple\", \"brown\", \"white\", \"black\", \"orange\"];\n    var nouns = [\"table\", \"chair\", \"house\", \"bbq\", \"desk\", \"car\", \"pony\", \"cookie\", \"sandwich\", \"burger\", \"pizza\", \"mouse\", \"keyboard\"];\n    var data = [];\n    for (var i = 0; i < count; i++) {\n        data.push({\n            id: did++,\n            label: adjectives[_random(adjectives.length)] + \" \" + colours[_random(colours.length)] + \" \" + nouns[_random(nouns.length)]\n        });\n    }\n    return data;\n}\nfunction _random(max) {\n    return Math.round(Math.random() * 1000) % max;\n}\n\nconst itemView = h`\n  <tr>\n      <td class=\"col-md-1\">#id</td>\n      <td class=\"col-md-4\">\n          <a #select>#label</a>\n      </td>\n      <td class=\"col-md-1\"><a #del><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span></a></td>\n      <td class=\"col-md-6\"></td>\n  </tr>\n`\nfunction Item(item, scope) {\n  const root = itemView.cloneNode(true)\n  const refs = itemView.collect(root)\n\n  const {id, label, select, del} = refs\n\n  id.nodeValue = item.id\n  label.nodeValue = item.label\n  select.__click = () => scope.select(item)\n  del.__click = () => scope.del(item)\n\n  let a = '', a2,\n      b = item.label, b2\n  root.update = function(selected) {\n    a2 = item.id === selected ? 'danger' : ''\n    b2 = item.label\n    \n    if (a2 !== a) a = root.className = a2\n    if (b2 !== b) b = label.nodeValue = b2\n  }\n\n  return root\n}\n\nconst mainView = h`\n  <div class=\"container\" id=\"main\">\n      <div class=\"jumbotron\">\n          <div class=\"row\">\n              <div class=\"col-md-6\">\n                  <h1>stage0</h1>\n              </div>\n              <div class=\"col-md-6\">\n                  <div class=\"row\">\n                      <div class=\"col-sm-6 smallpad\">\n                          <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"run\" #run>Create 1,000 rows</button>\n                      </div>\n                      <div class=\"col-sm-6 smallpad\">\n                          <button type=\"button\" class=\"btn btn-primary btn-block\" id=\"runlots\" #runlots>Create 10,000 rows</button>\n                      </div>\n                      <div class=\"col-sm-6 smallpad\">\n                          <button type=\"button\" class=\"btn btn-primary\n                          btn-block\" id=\"add\" #add>Append 1,000 rows</button>\n                      </div>\n                      <div class=\"col-sm-6 smallpad\">\n                          <button type=\"button\" class=\"btn btn-primary\n                          btn-block\" id=\"update\" #update>Update every 10th row</button>\n                      </div>\n                      <div class=\"col-sm-6 smallpad\">\n                          <button type=\"button\" class=\"btn btn-primary\n                          btn-block\" id=\"clear\" #cleardata>Clear</button>\n                      </div>\n                      <div class=\"col-sm-6 smallpad\">\n                          <button type=\"button\" class=\"btn btn-primary\n                          btn-block\" id=\"swaprows\" #swaprows>Swap Rows</button>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n      <table class=\"table table-hover table-striped test-data\">\n          <tbody #tbody>\n          </tbody>\n      </table>\n      <span class=\"preloadicon glyphicon glyphicon-remove\" aria-hidden=\"true\"></span>\n  </div>\n`\nfunction Main() {\n  setupSyntheticEvent('click')\n\n  let root = mainView\n  let refs = mainView.collect(root)\n  console.debug({refs})\n\n  let data = [],\n      selected\n\n  const {tbody} = refs\n\n  refs.run.__click = () => {\n    data = buildData(1000)\n    update(0)\n  }\n  refs.runlots.__click = () => {\n    data = buildData(10000)\n    update(0)\n  }\n  refs.add.__click = () => {\n    data = data.concat(buildData(1000))\n    update(0)\n  }\n  refs.update.__click = () => {\n    for (let i = 0; i < data.length; i += 10) {\n        data[i].label += ' !!!'\n    }\n    update(1)\n  }\n  refs.cleardata.__click = () => {\n    data = []\n    update(0)\n  }\n  refs.swaprows.__click = () => {\n    if(data.length > 998) {\n      var tmp = data[1];\n      data[1] = data[998];\n      data[998] = tmp;\n    }\n    update(0)\n  }\n\n  const scope = {\n    select: item => {\n        selected = parseInt(item.id)\n        update(1)\n    },\n    del: item => {\n      const id = item.id\n      const idx = data.findIndex(d => d.id === id);\n      data.splice(idx, 1)\n      update(0)\n    }\n  }\n\n  let renderedData = []\n  function update(deep) {\n    reconcile(\n      tbody,\n      renderedData,\n      data,\n      item => Item(item, scope),\n      deep ?\n        node => node.update(selected) :\n        () => {}\n    )\n    renderedData = data.slice()\n  }\n\n  return root\n}\n\nconst app = Main()\ndocument.getElementById('main').appendChild(app)\n"],"names":["did","buildData","count","adjectives","colours","nouns","data","i","push","id","label","_random","length","max","Math","round","random","itemView","h","Item","item","scope","root","cloneNode","refs","collect","select","del","nodeValue","__click","a","a2","b","b2","update","selected","className","mainView","Main","setupSyntheticEvent","console","debug","tbody","run","runlots","add","concat","cleardata","swaprows","tmp","parseInt","idx","findIndex","d","splice","renderedData","deep","reconcile","node","slice","app","document","getElementById","appendChild"],"mappings":"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"}