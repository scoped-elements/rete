{"version":3,"file":"alight-render-plugin.min.js","sources":["../src/index.js"],"sourcesContent":["import './index.sass';\nimport * as alight from 'alight';\nimport defaultTemplate from './node.pug';\n\nfunction toClassName(str) {\n    return str.toLowerCase().replace(/ /g, '-')\n}\n\nfunction install(editor, params) {\n\n    const nodeAl = alight.makeInstance();\n    const controlAl = alight.makeInstance();\n\n    nodeAl.directives.al.socket = (scope, el, expression, env) => {\n        const { locals } = env.changeDetector;\n        const type = expression;\n\n        scope.bindSocket(el, type, locals[type]);\n    }\n\n    nodeAl.directives.al.control = (scope, el, expression, env) => {\n        const { locals } = env.changeDetector;\n        const control = locals.input ? locals.input.control : locals.control;\n\n        scope.bindControl(el, control);\n    }\n\n    function isSelected(node) {\n        return editor.selected.contains(node);\n    }\n\n    editor.on('rendernode', ({ el, node, component, bindSocket, bindControl }) => {\n        if (component.render && component.render !== 'alight') return;\n        \n        el.innerHTML = component.template || params.template || defaultTemplate();\n\n        node._alight = nodeAl.bootstrap(el, { node, isSelected, bindSocket, bindControl, toClassName, Array });\n    });\n\n    editor.on('rendercontrol', ({ el, control }) => {\n        if (control.render && control.render !== 'alight') return;\n\n        const child = document.createElement('div');\n        const html = control.template || '';\n        const scope = control.scope || {};\n        const mounted = control.mounted || function () { };\n        \n        el.appendChild(child);\n        child.innerHTML = html;\n\n        control.render = 'alight';\n        control._alight = controlAl.bootstrap(child, scope);\n        mounted.call(control);\n    });\n\n    editor.on('connectioncreated connectionremoved', connection => {\n        connection.input.node._alight.scan();\n    });\n\n    editor.on('nodeselected', node => {\n        editor.nodes.map(n => n._alight.scan());\n        node._alight.scan();\n    });\n}\n\nexport default {\n    install\n}\n"],"names":["toClassName","str","toLowerCase","replace","editor","params","nodeAl","alight","controlAl","isSelected","node","selected","contains","directives","al","socket","scope","el","expression","env","locals","changeDetector","type","bindSocket","control","input","bindControl","on","component","render","innerHTML","template","defaultTemplate","_alight","bootstrap","Array","child","document","createElement","html","mounted","appendChild","call","scan","nodes","map","n"],"mappings":";;;;;+zMAIA,SAASA,EAAYC,UACVA,EAAIC,cAAcC,QAAQ,KAAM,qwDA4D5B,SAzDf,SAAiBC,EAAQC,OAEfC,EAASC,iBACTC,EAAYD,0BAgBTE,EAAWC,UACTN,EAAOO,SAASC,SAASF,KAf7BG,WAAWC,GAAGC,OAAS,SAACC,EAAOC,EAAIC,EAAYC,OAC1CC,EAAWD,EAAIE,eAAfD,OACFE,EAAOJ,IAEPK,WAAWN,EAAIK,EAAMF,EAAOE,OAG/BT,WAAWC,GAAGU,QAAU,SAACR,EAAOC,EAAIC,EAAYC,OAC3CC,EAAWD,EAAIE,eAAfD,OACFI,EAAUJ,EAAOK,MAAQL,EAAOK,MAAMD,QAAUJ,EAAOI,UAEvDE,YAAYT,EAAIO,MAOnBG,GAAG,aAAc,gBAAGV,IAAAA,GAAIP,IAAAA,KAAMkB,IAAAA,UAAWL,IAAAA,WAAYG,IAAAA,YACpDE,EAAUC,QAA+B,WAArBD,EAAUC,WAE/BC,UAAYF,EAAUG,UAAY1B,EAAO0B,4oCAAYC,KAEnDC,QAAU3B,EAAO4B,UAAUjB,EAAI,CAAEP,OAAMD,aAAYc,aAAYG,cAAa1B,cAAamC,mBAG3FR,GAAG,gBAAiB,gBAAGV,IAAAA,GAAIO,IAAAA,YAC1BA,EAAQK,QAA6B,WAAnBL,EAAQK,YAExBO,EAAQC,SAASC,cAAc,OAC/BC,EAAOf,EAAQO,UAAY,GAC3Bf,EAAQQ,EAAQR,OAAS,GACzBwB,EAAUhB,EAAQgB,SAAW,eAEhCC,YAAYL,KACTN,UAAYS,IAEVV,OAAS,WACTI,QAAUzB,EAAU0B,UAAUE,EAAOpB,KACrC0B,KAAKlB,QAGVG,GAAG,sCAAuC,cAClCF,MAAMf,KAAKuB,QAAQU,WAG3BhB,GAAG,eAAgB,cACfiB,MAAMC,IAAI,mBAAKC,EAAEb,QAAQU,WAC3BV,QAAQU"}